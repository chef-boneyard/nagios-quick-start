# Contact definitions
#
# Autogenerated by Chef.

define contact {
  contact_name                    root
  alias                           Root
  service_notification_period     24x7
  host_notification_period        24x7
  service_notification_options    w,u,c,r
  host_notification_options       d,r
  service_notification_commands   service-notify-by-email
  host_notification_commands      host-notify-by-email
  email                           root@localhost
}

define contactgroup {
  contactgroup_name admins
  alias             Nagios Administrators
  members           <%= @members.join(',') %><%= ",pagerduty" unless node['nagios']['pagerduty_key'].empty? %>
}

define contactgroup {
  contactgroup_name admins-sms
  alias             Sysadmin SMS
  members           <%= @members.join(',') %>
}

<% @admins.each do |a| -%>
define contact {
  use          default-contact
  contact_name <%= a['id'] %>
  <%= "email  #{a['nagios']['email']}" unless a['nagios'].nil? || a['nagios']['email'].nil? %>
}

<% end -%>

# Contacts from data bags
<% @contacts.each do |contact| -%>
define contact {
  name <%= contact['id'] %>
  contact_name <%= contact['id'] %>
  <% %w{use alias service_notification_period host_notification_period service_notification_options host_notification_options service_notification_commands host_notification_commands email pager register}.each do |conf| %>
  <% unless contact[conf].nil? %>
  <%= conf %> <%= contact[conf] %>
  <% end %>
  <% end %>
}
<% end %>

# Contact Groupss from data bags
<% @contactgroups.each do |contactgroup| -%>
define contactgroup {
  contactgroup_name <%= contactgroup['id'] %>
  <% %w{alias members contactgroup_members}.each do |conf| %>
  <% unless contactgroup[conf].nil? %>
  <%= conf %> <%= contactgroup[conf] %>
  <% end %>
  <% end %>
}
<% end %>

# Service escalations defined by data bags
<% @serviceescalations.each do |serviceescalation| -%>
define serviceescalation {
  name <%= serviceescalation['id'] %>
  register 0
  <% %w{use contact_groups first_notification last_notification escalation_period notification_interval}.each do |conf| %>
  <% unless serviceescalation[conf].nil? %>
  <%= conf %> <%= serviceescalation[conf] %>
  <% end %>
  <% end %>
}
<% end -%>

